CREATE TABLE order_items
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name             VARCHAR(255),
    integration_name VARCHAR(255),
    order_id         BIGINT,
    product_id       BIGINT,
    total            DOUBLE PRECISION,
    quantity         INTEGER,
    CONSTRAINT pk_order_items PRIMARY KEY (id)
);

CREATE TABLE orders
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    code          VARCHAR(255),
    customer_info VARCHAR(255),
    date          TIMESTAMP WITHOUT TIME ZONE,
    total         DOUBLE PRECISION,
    CONSTRAINT pk_orders PRIMARY KEY (id)
);

CREATE TABLE preparation_ingredients
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    raw_material_id BIGINT,
    preparation_id  BIGINT,
    quantity        DOUBLE PRECISION,
    total_cost      DOUBLE PRECISION,
    ingredient_type SMALLINT,
    custom_name     VARCHAR(255),
    custom_cost     DOUBLE PRECISION,
    CONSTRAINT pk_preparation_ingredients PRIMARY KEY (id)
);

CREATE TABLE preparations
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name             VARCHAR(255),
    total_cost       DOUBLE PRECISION,
    cost_per_unit    DOUBLE PRECISION,
    quantity         DOUBLE PRECISION,
    measurement_unit SMALLINT,
    CONSTRAINT pk_preparations PRIMARY KEY (id)
);

CREATE TABLE product_ingredients
(
    id                    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    custom_cost           DOUBLE PRECISION,
    custom_name           VARCHAR(255),
    raw_material_id       BIGINT,
    preparation_id        BIGINT,
    product_id            BIGINT                                  NOT NULL,
    ingredient_product_id BIGINT,
    ingredient_type       SMALLINT,
    quantity              DOUBLE PRECISION,
    total_cost            DOUBLE PRECISION,
    CONSTRAINT pk_product_ingredients PRIMARY KEY (id)
);

CREATE TABLE products
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name             VARCHAR(255),
    integration_name VARCHAR(255),
    price            DOUBLE PRECISION,
    category_id      BIGINT,
    total_cost       DOUBLE PRECISION,
    suggested_price  DOUBLE PRECISION,
    profit_margin    DOUBLE PRECISION,
    profit           DOUBLE PRECISION,
    sales_quantity   INTEGER,
    total_billed     DOUBLE PRECISION,
    cost_per_unit    DOUBLE PRECISION,
    quantity         DOUBLE PRECISION,
    measurement_unit SMALLINT,
    CONSTRAINT pk_products PRIMARY KEY (id)
);

CREATE TABLE products_categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_products_categories PRIMARY KEY (id)
);

CREATE TABLE raw_materials
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name             VARCHAR(255),
    cost             DOUBLE PRECISION,
    quantity         DOUBLE PRECISION,
    measurement_unit SMALLINT,
    cost_per_unit    DOUBLE PRECISION,
    category_id      BIGINT,
    CONSTRAINT pk_raw_materials PRIMARY KEY (id)
);

CREATE TABLE raw_materials_categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    CONSTRAINT pk_raw_materials_categories PRIMARY KEY (id)
);

ALTER TABLE order_items
    ADD CONSTRAINT FK_ORDER_ITEMS_ON_ORDER FOREIGN KEY (order_id) REFERENCES orders (id);

ALTER TABLE order_items
    ADD CONSTRAINT FK_ORDER_ITEMS_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES products (id);

ALTER TABLE preparation_ingredients
    ADD CONSTRAINT FK_PREPARATION_INGREDIENTS_ON_PREPARATION FOREIGN KEY (preparation_id) REFERENCES preparations (id);

ALTER TABLE preparation_ingredients
    ADD CONSTRAINT FK_PREPARATION_INGREDIENTS_ON_RAW_MATERIAL FOREIGN KEY (raw_material_id) REFERENCES raw_materials (id);

ALTER TABLE products
    ADD CONSTRAINT FK_PRODUCTS_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES products_categories (id);

ALTER TABLE product_ingredients
    ADD CONSTRAINT FK_PRODUCT_INGREDIENTS_ON_INGREDIENT_PRODUCT FOREIGN KEY (ingredient_product_id) REFERENCES products (id);

ALTER TABLE product_ingredients
    ADD CONSTRAINT FK_PRODUCT_INGREDIENTS_ON_PREPARATION FOREIGN KEY (preparation_id) REFERENCES preparations (id);

ALTER TABLE product_ingredients
    ADD CONSTRAINT FK_PRODUCT_INGREDIENTS_ON_PRODUCT FOREIGN KEY (product_id) REFERENCES products (id);

ALTER TABLE product_ingredients
    ADD CONSTRAINT FK_PRODUCT_INGREDIENTS_ON_RAW_MATERIAL FOREIGN KEY (raw_material_id) REFERENCES raw_materials (id);

ALTER TABLE raw_materials
    ADD CONSTRAINT FK_RAW_MATERIALS_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES raw_materials_categories (id);